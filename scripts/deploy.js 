const { expect } = require("chai");
const { ethers } = require("hardhat");

describe("GameHubToken", function () {
  let token, owner, addr1;

  beforeEach(async function () {
    [owner, addr1] = await ethers.getSigners();
    const Token = await ethers.getContractFactory("GameHubToken");
    token = await Token.deploy();
    await token.waitForDeployment();
  });

  it("Should assign initial supply to owner", async function () {
    const balance = await token.balanceOf(owner.address);
    expect(balance).to.equal(ethers.parseUnits("1000000", 18));
  });

  it("Should allow owner to mint tokens", async function () {
    await token.mint(addr1.address, ethers.parseUnits("500", 18));
    const balance = await token.balanceOf(addr1.address);
    expect(balance).to.equal(ethers.parseUnits("500", 18));
  });

  it("Should not allow non-owner to mint", async function () {
    await expect(
      token.connect(addr1).mint(addr1.address, ethers.parseUnits("100", 18))
    ).to.be.revertedWith("Ownable: caller is not the owner");
  });
});